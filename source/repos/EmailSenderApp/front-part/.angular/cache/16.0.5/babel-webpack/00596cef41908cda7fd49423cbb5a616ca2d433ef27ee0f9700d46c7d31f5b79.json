{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/emailSettings.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction InputsBlockComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r8 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", option_r8)(\"selected\", option_r8 === ctx_r0.emailSettings.periodicity);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r8);\n  }\n}\nclass InputsBlockComponent {\n  constructor(emailSettingService, formBuilder) {\n    this.emailSettingService = emailSettingService;\n    this.formBuilder = formBuilder;\n    this.emailSettings = {\n      intervalValue: 0,\n      startTime: 0,\n      endTime: 0,\n      isScheduled: false,\n      periodicity: '',\n      daysOfWeek: []\n    };\n    this.options = ['hours', 'minutes', 'seconds'];\n  }\n  ngOnInit() {\n    this.emailSettingService.getGeneralProperties().subscribe({\n      next: response => {\n        this.emailSettings = response, console.log(this.emailSettings);\n      },\n      error: error => console.log(error)\n    });\n  }\n  onCheckboxDaysChange(additionalValue) {\n    if (this.emailSettings.daysOfWeek.includes(additionalValue)) {\n      const index = this.emailSettings.daysOfWeek.indexOf(additionalValue);\n      if (index > -1) {\n        this.emailSettings.daysOfWeek.splice(index, 1);\n      }\n    } else {\n      this.emailSettings.daysOfWeek.push(additionalValue);\n    }\n  }\n  onIsScheduledChange() {\n    this.emailSettings.isScheduled = !this.emailSettings.isScheduled;\n    console.log('Checkbox checked:', this.emailSettings.isScheduled);\n  }\n  onFormSubmit() {\n    console.log(this.emailSettings);\n  }\n  onChange(event) {\n    this.emailSettings.periodicity = event.target.value;\n    console.log('Selected option:', this.emailSettings.periodicity);\n  }\n}\nInputsBlockComponent.ɵfac = function InputsBlockComponent_Factory(t) {\n  return new (t || InputsBlockComponent)(i0.ɵɵdirectiveInject(i1.EmailSettingsService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nInputsBlockComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InputsBlockComponent,\n  selectors: [[\"app-inputs-block\"]],\n  decls: 72,\n  vars: 13,\n  consts: [[3, \"submit\"], [1, \"row\"], [1, \"col-sm-6\"], [1, \"form-group\"], [\"for\", \"everyHourInput\", 1, \"form-label\"], [\"name\", \"intervalValue\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"hourFromInput\", 1, \"form-label\"], [\"name\", \"startTime\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"timeTypeInput\"], [1, \"form-select\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"hourToInput\", 1, \"form-label\"], [\"name\", \"endTime\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"row\", \"mt-3\"], [1, \"col-md-3\"], [1, \"form-check\", \"mb-3\"], [\"type\", \"checkbox\", \"value\", \"0\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"checked\", \"change\"], [\"checkbox\", \"\"], [\"for\", \"flexCheckDefault\", 1, \"form-check-label\", \"fs-5\"], [\"type\", \"checkbox\", \"value\", \"2\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"checked\", \"change\"], [\"type\", \"checkbox\", \"value\", \"4\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"checked\", \"change\"], [\"type\", \"checkbox\", \"value\", \"6\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"checked\", \"change\"], [\"type\", \"checkbox\", \"value\", \"1\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"checked\", \"change\"], [\"type\", \"checkbox\", \"value\", \"3\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"checked\", \"change\"], [\"type\", \"checkbox\", \"value\", \"5\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"checked\", \"change\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"flexCheckDefault\", 1, \"form-check-input\", 3, \"checked\", \"change\"], [1, \"d-flex\", \"flex-row\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"mr-3\"], [1, \"fa-regular\", \"fa-xmark\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [1, \"fa-regular\", \"fa-floppy-disk\"], [3, \"value\", \"selected\"]],\n  template: function InputsBlockComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r9 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Schedule a New Job\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function InputsBlockComponent_Template_form_submit_2_listener() {\n        return ctx.onFormSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Every:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function InputsBlockComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.emailSettings.intervalValue = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"From Hour:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function InputsBlockComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.emailSettings.startTime = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"div\", 3)(15, \"label\", 8);\n      i0.ɵɵtext(16, \"Time value:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"select\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function InputsBlockComponent_Template_select_ngModelChange_17_listener($event) {\n        return ctx.emailSettings.periodicity = $event;\n      })(\"change\", function InputsBlockComponent_Template_select_change_17_listener($event) {\n        return ctx.onChange($event);\n      });\n      i0.ɵɵtemplate(18, InputsBlockComponent_option_18_Template, 2, 3, \"option\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 11);\n      i0.ɵɵtext(21, \"To Hour:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function InputsBlockComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.emailSettings.endTime = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(23, \"div\", 13)(24, \"div\", 14)(25, \"div\", 15)(26, \"input\", 16, 17);\n      i0.ɵɵlistener(\"change\", function InputsBlockComponent_Template_input_change_26_listener() {\n        i0.ɵɵrestoreView(_r9);\n        const _r1 = i0.ɵɵreference(27);\n        return i0.ɵɵresetView(ctx.onCheckboxDaysChange(+_r1.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"label\", 18);\n      i0.ɵɵtext(29, \" Every Sunday \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 15)(31, \"input\", 19, 17);\n      i0.ɵɵlistener(\"change\", function InputsBlockComponent_Template_input_change_31_listener() {\n        i0.ɵɵrestoreView(_r9);\n        const _r1 = i0.ɵɵreference(27);\n        return i0.ɵɵresetView(ctx.onCheckboxDaysChange(+_r1.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"label\", 18);\n      i0.ɵɵtext(34, \" Every Tuesday \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"div\", 15)(36, \"input\", 20, 17);\n      i0.ɵɵlistener(\"change\", function InputsBlockComponent_Template_input_change_36_listener() {\n        i0.ɵɵrestoreView(_r9);\n        const _r1 = i0.ɵɵreference(27);\n        return i0.ɵɵresetView(ctx.onCheckboxDaysChange(+_r1.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"label\", 18);\n      i0.ɵɵtext(39, \" Every Thursday \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(40, \"div\", 15)(41, \"input\", 21, 17);\n      i0.ɵɵlistener(\"change\", function InputsBlockComponent_Template_input_change_41_listener() {\n        i0.ɵɵrestoreView(_r9);\n        const _r1 = i0.ɵɵreference(27);\n        return i0.ɵɵresetView(ctx.onCheckboxDaysChange(+_r1.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"label\", 18);\n      i0.ɵɵtext(44, \" Every Saturday \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(45, \"div\", 14)(46, \"div\", 15)(47, \"input\", 22, 17);\n      i0.ɵɵlistener(\"change\", function InputsBlockComponent_Template_input_change_47_listener() {\n        i0.ɵɵrestoreView(_r9);\n        const _r1 = i0.ɵɵreference(27);\n        return i0.ɵɵresetView(ctx.onCheckboxDaysChange(+_r1.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"label\", 18);\n      i0.ɵɵtext(50, \" Every Monday \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"div\", 15)(52, \"input\", 23, 17);\n      i0.ɵɵlistener(\"change\", function InputsBlockComponent_Template_input_change_52_listener() {\n        i0.ɵɵrestoreView(_r9);\n        const _r1 = i0.ɵɵreference(27);\n        return i0.ɵɵresetView(ctx.onCheckboxDaysChange(+_r1.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"label\", 18);\n      i0.ɵɵtext(55, \" Every Wednesday \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(56, \"div\", 15)(57, \"input\", 24, 17);\n      i0.ɵɵlistener(\"change\", function InputsBlockComponent_Template_input_change_57_listener() {\n        i0.ɵɵrestoreView(_r9);\n        const _r1 = i0.ɵɵreference(27);\n        return i0.ɵɵresetView(ctx.onCheckboxDaysChange(+_r1.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"label\", 18);\n      i0.ɵɵtext(60, \" Every Friday \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(61, \"div\", 15)(62, \"input\", 25);\n      i0.ɵɵlistener(\"change\", function InputsBlockComponent_Template_input_change_62_listener() {\n        return ctx.onIsScheduledChange();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"label\", 18);\n      i0.ɵɵtext(64, \" Is Scheduled \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(65, \"div\", 26)(66, \"button\", 27);\n      i0.ɵɵelement(67, \"i\", 28);\n      i0.ɵɵtext(68, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(69, \"button\", 29);\n      i0.ɵɵelement(70, \"i\", 30);\n      i0.ɵɵtext(71, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.emailSettings.intervalValue);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.emailSettings.startTime);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.emailSettings.periodicity);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.options);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.emailSettings.endTime);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"checked\", ctx.emailSettings.daysOfWeek.includes(0));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"checked\", ctx.emailSettings.daysOfWeek.includes(2));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"checked\", ctx.emailSettings.daysOfWeek.includes(4));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"checked\", ctx.emailSettings.daysOfWeek.includes(6));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"checked\", ctx.emailSettings.daysOfWeek.includes(1));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"checked\", ctx.emailSettings.daysOfWeek.includes(3));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"checked\", ctx.emailSettings.daysOfWeek.includes(5));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"checked\", ctx.emailSettings.isScheduled);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\".form-check[_ngcontent-%COMP%] {\\n  border: 1px solid rgb(0, 183, 255);\\n  border-radius: 5px;\\n}\\n.form-check[_ngcontent-%COMP%]   .form-check-label[_ngcontent-%COMP%] {\\n  color: rgb(0, 183, 255);\\n}\\n.form-check[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaW5wdXRzLWJsb2NrL2lucHV0cy1ibG9jay5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNFLGtDQUFBO0VBQ0Esa0JBQUE7QUFGRjtBQUlJO0VBQ0ksdUJBUE87QUFLZjtBQUtJO0VBQ0ksa0JBQUE7QUFIUiIsInNvdXJjZXNDb250ZW50IjpbIiRvdXRsaW5lQ29sb3I6IHJnYigwLCAxODMsIDI1NSk7XHJcbiRjb250ZW50Q29sb3I6IHJnYigwLCAxODMsIDI1NSk7O1xyXG5cclxuLmZvcm0tY2hlY2sge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICRvdXRsaW5lQ29sb3I7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIFxyXG4gICAgLmZvcm0tY2hlY2stbGFiZWx7XHJcbiAgICAgICAgY29sb3I6ICRjb250ZW50Q29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgLmZvcm0tY2hlY2staW5wdXR7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG4gICBcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { InputsBlockComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r8","ctx_r0","emailSettings","periodicity","ɵɵadvance","ɵɵtextInterpolate","InputsBlockComponent","constructor","emailSettingService","formBuilder","intervalValue","startTime","endTime","isScheduled","daysOfWeek","options","ngOnInit","getGeneralProperties","subscribe","next","response","console","log","error","onCheckboxDaysChange","additionalValue","includes","index","indexOf","splice","push","onIsScheduledChange","onFormSubmit","onChange","event","target","value","ɵɵdirectiveInject","i1","EmailSettingsService","i2","FormBuilder","selectors","decls","vars","consts","template","InputsBlockComponent_Template","rf","ctx","ɵɵlistener","InputsBlockComponent_Template_form_submit_2_listener","InputsBlockComponent_Template_input_ngModelChange_8_listener","$event","InputsBlockComponent_Template_input_ngModelChange_12_listener","InputsBlockComponent_Template_select_ngModelChange_17_listener","InputsBlockComponent_Template_select_change_17_listener","ɵɵtemplate","InputsBlockComponent_option_18_Template","InputsBlockComponent_Template_input_ngModelChange_22_listener","InputsBlockComponent_Template_input_change_26_listener","ɵɵrestoreView","_r9","_r1","ɵɵreference","ɵɵresetView","InputsBlockComponent_Template_input_change_31_listener","InputsBlockComponent_Template_input_change_36_listener","InputsBlockComponent_Template_input_change_41_listener","InputsBlockComponent_Template_input_change_47_listener","InputsBlockComponent_Template_input_change_52_listener","InputsBlockComponent_Template_input_change_57_listener","InputsBlockComponent_Template_input_change_62_listener","ɵɵelement"],"sources":["C:\\Users\\User\\source\\repos\\EmailSenderApp\\front-part\\src\\app\\inputs-block\\inputs-block.component.ts","C:\\Users\\User\\source\\repos\\EmailSenderApp\\front-part\\src\\app\\inputs-block\\inputs-block.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { EmailSettings } from 'src/models/emailSettings';\nimport { EmailSettingsService } from 'src/services/emailSettings.service';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-inputs-block',\n  templateUrl: './inputs-block.component.html',\n  styleUrls: ['./inputs-block.component.scss']\n})\nexport class InputsBlockComponent implements OnInit {\n  emailSettings: EmailSettings = {\n    intervalValue: 0, \n    startTime: 0,\n    endTime:0,\n    isScheduled: false,\n    periodicity: '', \n    daysOfWeek: []\n  };\n\n  options: string[] = ['hours', 'minutes', 'seconds']; \n\n constructor(private emailSettingService: EmailSettingsService, private formBuilder: FormBuilder){}\n\n  ngOnInit(): void {\n   this.emailSettingService.getGeneralProperties().subscribe({\n    next: (response: any) => {\n      this.emailSettings = response,\n      console.log(this.emailSettings)\n    },\n    error: error => console.log(error)\n    });\n }\n\n onCheckboxDaysChange(additionalValue: number) {\n  if (this.emailSettings.daysOfWeek.includes(additionalValue)) {\n    const index = this.emailSettings.daysOfWeek.indexOf(additionalValue);\n    if (index > -1) {\n      this.emailSettings.daysOfWeek.splice(index, 1);\n    }\n  } else {\n    this.emailSettings.daysOfWeek.push(additionalValue);\n  }\n  }\n\n  onIsScheduledChange(){\n    this.emailSettings.isScheduled = !this.emailSettings.isScheduled;\n    console.log('Checkbox checked:', this.emailSettings.isScheduled);\n  }\n\n  onFormSubmit() {\n    console.log(this.emailSettings);\n  }\n  \n  onChange(event: any) {\n    this.emailSettings.periodicity = event.target.value;\n    console.log('Selected option:', this.emailSettings.periodicity);\n  }\n  \n  \n}\n","<h1>Schedule a New Job</h1>\n\n<form (submit)=\"onFormSubmit()\">\n    <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"everyHourInput\" class=\"form-label\">Every:</label>\n                    <input class=\"form-control\" name=\"intervalValue\" [(ngModel)]=\"emailSettings.intervalValue\" required/>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"hourFromInput\" class=\"form-label\">From Hour:</label>\n                    <input class=\"form-control\" name=\"startTime\" [(ngModel)]=\"emailSettings.startTime\" required/>\n                </div>\n            \n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"timeTypeInput\">Time value:</label>\n                    <select class=\"form-select\" [(ngModel)]=\"emailSettings.periodicity\" (change)=\"onChange($event)\">\n                        <option *ngFor=\"let option of options\" [value]=\"option\" [selected]=\"option === emailSettings.periodicity\">{{ option }}</option>\n                      </select>\n                </div>\n                <div class=\"form-group\">\n                        <label for=\"hourToInput\" class=\"form-label\">To Hour:</label>\n                        <input class=\"form-control\" name=\"endTime\" [(ngModel)]=\"emailSettings.endTime\" required>\n                </div>\n            </div>\n            \n    </div>\n\n    <div class=\"row mt-3\">\n        <div class=\"col-md-3\">\n            <div class=\"form-check mb-3\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"0\" id=\"flexCheckDefault\" #checkbox (change)=\"onCheckboxDaysChange(+checkbox.value)\" [checked]=\"emailSettings.daysOfWeek.includes(0)\">\n                <label class=\"form-check-label fs-5\" for=\"flexCheckDefault\">\n                Every Sunday\n                </label>\n            </div>\n            <div class=\"form-check mb-3\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"2\" id=\"flexCheckDefault\" #checkbox (change)=\"onCheckboxDaysChange(+checkbox.value)\" [checked]=\"emailSettings.daysOfWeek.includes(2)\">\n                <label class=\"form-check-label fs-5\" for=\"flexCheckDefault\">\n                Every Tuesday\n                </label>\n            </div>\n            <div class=\"form-check mb-3\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"4\" id=\"flexCheckDefault\" #checkbox (change)=\"onCheckboxDaysChange(+checkbox.value)\" [checked]=\"emailSettings.daysOfWeek.includes(4)\">\n                <label class=\"form-check-label fs-5\" for=\"flexCheckDefault\">\n                Every Thursday\n                </label>\n            </div>\n            <div class=\"form-check mb-3\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"6\" id=\"flexCheckDefault\" #checkbox (change)=\"onCheckboxDaysChange(+checkbox.value)\" [checked]=\"emailSettings.daysOfWeek.includes(6)\">\n                <label class=\"form-check-label fs-5\" for=\"flexCheckDefault\">\n                Every Saturday\n                </label>\n            </div>\n        </div>\n        <div class=\"col-md-3\">\n            <div class=\"form-check mb-3\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"1\" id=\"flexCheckDefault\" #checkbox (change)=\"onCheckboxDaysChange(+checkbox.value)\" [checked]=\"emailSettings.daysOfWeek.includes(1)\">\n                <label class=\"form-check-label fs-5\" for=\"flexCheckDefault\">\n                Every Monday\n                </label>\n            </div>\n            <div class=\"form-check mb-3\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"3\" id=\"flexCheckDefault\" #checkbox (change)=\"onCheckboxDaysChange(+checkbox.value)\" [checked]=\"emailSettings.daysOfWeek.includes(3)\">\n                <label class=\"form-check-label fs-5\" for=\"flexCheckDefault\">\n                Every Wednesday\n                </label>\n            </div>\n            <div class=\"form-check mb-3\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"5\" id=\"flexCheckDefault\" #checkbox (change)=\"onCheckboxDaysChange(+checkbox.value)\" [checked]=\"emailSettings.daysOfWeek.includes(5)\">\n                <label class=\"form-check-label fs-5\" for=\"flexCheckDefault\">\n                Every Friday\n                </label>\n            </div>\n            <div class=\"form-check mb-3\">\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" (change)=\"onIsScheduledChange()\" [checked]=\"emailSettings.isScheduled\">\n                <label class=\"form-check-label fs-5\" for=\"flexCheckDefault\">\n                Is Scheduled \n                </label>\n            </div>\n        </div>\n    </div>\n    <div class=\"d-flex flex-row\">\n        <button type=\"button\" class=\"btn btn-danger mr-3\"><i class=\"fa-regular fa-xmark\"></i>Cancel</button>\n        <button type=\"submit\" class=\"btn btn-success\"><i class=\"fa-regular fa-floppy-disk\"></i>Save</button>\n    </div>\n\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}